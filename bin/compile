#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# Nginx 1.6.2

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

mkdir -p $BUILD_DIR $CACHE_DIR

echo "-----> Copy static files to www"
rm -rf $CACHE_DIR/www_cache
mkdir -p $CACHE_DIR/www_cache
mv $BUILD_DIR/* $CACHE_DIR/www_cache
mkdir -p $BUILD_DIR/www
mv $CACHE_DIR/www_cache/* $BUILD_DIR/www

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

echo "-----> Unpacking Nginx"
tar -xvzf $LP_DIR/bin/nginx.tar.gz

echo "-----> Copy Nginx into the slug"
cp "$LP_DIR/nginx" "$BUILD_DIR/"

# build nginx config unless overridden by user
#if [ ! -f $BUILD_DIR/nginx/nginx.conf ] ; then
echo "-----> Using default nginx.conf.erb"
cp $LP_DIR/conf/nginx.conf.erb $BUILD_DIR/nginx/nginx.conf.erb
#fi

# build mime.types unless overridden by user
#if [ ! -f $BUILD_DIR/mime.types ] ; then
echo "-----> Using default mime.types"
cp $LP_DIR/conf/mime.types $BUILD_DIR/nginx/mime.types
#fi

# build a startup script
cat <<EOF >"$BUILD_DIR/start_nginx"
#!/usr/bin/env bash
rm -f nginx/nginx.conf
erb nginx/nginx.conf.erb > nginx/nginx.conf
mkdir -p logs
touch logs/access.log logs/error.log
(tail -qF -n 0 --pid=\$\$ logs/*.log &)
exec nginx
EOF
chmod +x "$BUILD_DIR/start_nginx"
